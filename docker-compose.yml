version: '3.8'

services:
  # CodeValdCortex main application
  codevaldcortex:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VERSION: dev
        BUILD_TIME: ${BUILD_TIME:-unknown}
        GIT_COMMIT: ${GIT_COMMIT:-unknown}
    ports:
      - "8080:8080"
    environment:
      - CVXC_LOG_LEVEL=debug
      - CVXC_DATABASE_HOST=arangodb
      - CVXC_DATABASE_PASSWORD=password
    depends_on:
      - arangodb
    volumes:
      - ./config.yaml:/app/config.yaml:ro
    networks:
      - codevaldcortex-network
    restart: unless-stopped

  # ArangoDB database
  arangodb:
    image: arangodb:3.11
    environment:
      - ARANGO_ROOT_PASSWORD=password
      - ARANGO_NO_AUTH=0
    ports:
      - "8529:8529"
    volumes:
      - arangodb_data:/var/lib/arangodb3
      - arangodb_apps:/var/lib/arangodb3-apps
    networks:
      - codevaldcortex-network
    restart: unless-stopped

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./deployments/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - codevaldcortex-network
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./deployments/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./deployments/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - codevaldcortex-network
    restart: unless-stopped

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - codevaldcortex-network
    restart: unless-stopped

  # Redis for caching and message queuing
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - codevaldcortex-network
    restart: unless-stopped

networks:
  codevaldcortex-network:
    driver: bridge

volumes:
  arangodb_data:
  arangodb_apps:
  prometheus_data:
  grafana_data:
  redis_data: