package components

import (
	"fmt"
	"github.com/aosanya/CodeValdCortex/internal/registry"
)

templ AgentTypeCard(agentType *registry.AgentType) {
	<div 
		class="box"
		x-data="{ expanded: false }"
		data-type-id={ agentType.ID }
	>
		<!-- Header -->
		<div class="mb-4">
			<div class="is-flex is-justify-content-space-between is-align-items-start">
				<div class="is-flex-grow-1">
					<h3 class="title is-5 mb-2">
						{ agentType.Name }
					</h3>
					<p class="is-size-7 has-text-grey">
						ID: <code class="is-size-7 has-background-light px-2 py-1" style="border-radius: 4px;">{ agentType.ID }</code>
					</p>
				</div>
				
				<div class="tags ml-3">
					@CategoryBadge(agentType.Category)
					@EnabledBadge(agentType.IsEnabled)
					if agentType.IsSystemType {
						<span class="tag is-info is-light">
							<span class="icon is-small">
								<svg style="width: 0.75rem; height: 0.75rem;" fill="currentColor" viewBox="0 0 20 20">
									<path fill-rule="evenodd" d="M2.166 4.999A11.954 11.954 0 0010 1.944 11.954 11.954 0 0017.834 5c.11.65.166 1.32.166 2.001 0 5.225-3.34 9.67-8 11.317C5.34 16.67 2 12.225 2 7c0-.682.057-1.35.166-2.001zm11.541 3.708a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
								</svg>
							</span>
							<span>System</span>
						</span>
					}
				</div>
			</div>
		</div>
		
		<!-- Description -->
		<div class="content mb-4">
			<p class="is-size-6">
				{ agentType.Description }
			</p>
		</div>
		
		<!-- Info Grid -->
		<div class="mb-4">
			<div class="columns is-mobile is-multiline is-size-7 mb-0">
				<div class="column is-half py-2">
					<span class="has-text-grey">Version:</span>
					<span class="has-text-weight-medium ml-2">{ agentType.Version }</span>
				</div>
				<div class="column is-half py-2">
					<span class="has-text-grey">Category:</span>
					<span class="has-text-weight-medium ml-2">{ agentType.Category }</span>
				</div>
				<div class="column is-half py-2">
					<span class="has-text-grey">Required Caps:</span>
					<span class="has-text-weight-medium ml-2">{ fmt.Sprintf("%d", len(agentType.RequiredCapabilities)) }</span>
				</div>
				<div class="column is-half py-2">
					<span class="has-text-grey">Optional Caps:</span>
					<span class="has-text-weight-medium ml-2">{ fmt.Sprintf("%d", len(agentType.OptionalCapabilities)) }</span>
				</div>
			</div>
		</div>
		
		<!-- Capabilities Section (Expandable) -->
		<div class="pt-4" style="border-top: 1px solid #dbdbdb;">
			<button 
				@click="expanded = !expanded"
				class="button is-fullwidth is-text is-small"
			>
				<span>Capabilities & Details</span>
				<span class="icon">
					<svg 
						style="width: 1.25rem; height: 1.25rem; transition: transform 0.2s;"
						:style="expanded ? 'transform: rotate(180deg);' : ''"
						fill="none" 
						stroke="currentColor" 
						viewBox="0 0 24 24"
					>
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
					</svg>
				</span>
			</button>
			
			<div 
				x-show="expanded"
				x-transition
				class="mt-4"
			>
				<!-- Required Capabilities -->
				if len(agentType.RequiredCapabilities) > 0 {
					<div class="mb-4">
						<h4 class="subtitle is-6">Required Capabilities</h4>
						<div class="tags">
							for _, cap := range agentType.RequiredCapabilities {
								<span class="tag is-danger is-light">
									{ cap }
								</span>
							}
						</div>
					</div>
				}
				
				<!-- Optional Capabilities -->
				if len(agentType.OptionalCapabilities) > 0 {
					<div class="mb-4">
						<h4 class="subtitle is-6">Optional Capabilities</h4>
						<div class="tags">
							for _, cap := range agentType.OptionalCapabilities {
								<span class="tag is-info is-light">
									{ cap }
								</span>
							}
						</div>
					</div>
				}
				
				<!-- Default Config -->
				if len(agentType.DefaultConfig) > 0 {
					<div class="mb-4">
						<h4 class="subtitle is-6">Default Configuration</h4>
						<div class="box has-background-light">
							<pre class="is-size-7">
								for key, value := range agentType.DefaultConfig {
									{ fmt.Sprintf("%s: %v\n", key, value) }
								}
							</pre>
						</div>
					</div>
				}
				
				<!-- Actions -->
				<div class="buttons">
					if !agentType.IsSystemType {
						if agentType.IsEnabled {
							<button 
								hx-post={ fmt.Sprintf("/api/v1/agent-types/%s/disable", agentType.ID) }
								hx-target="closest div[data-type-id]"
								hx-swap="outerHTML"
								class="button is-warning is-small is-light"
							>
								Disable
							</button>
						} else {
							<button 
								hx-post={ fmt.Sprintf("/api/v1/agent-types/%s/enable", agentType.ID) }
								hx-target="closest div[data-type-id]"
								hx-swap="outerHTML"
								class="button is-success is-small is-light"
							>
								Enable
							</button>
						}
						<button 
							@click="$dispatch('edit-agent-type', { id: agentType.ID })"
							class="button is-info is-small is-light"
						>
							Edit
						</button>
					}
					<button 
						@click="$dispatch('view-schema', { id: agentType.ID })"
						class="button is-light is-small"
					>
						View Schema
					</button>
				</div>
			</div>
		</div>
	</div>
}

templ CategoryBadge(category string) {
	<span class={ 
		"tag",
		templ.KV("is-primary is-light", category == "core"),
		templ.KV("is-success is-light", category == "infrastructure"),
		templ.KV("is-warning is-light", category == "monitoring"),
		templ.KV("is-light", category != "core" && category != "infrastructure" && category != "monitoring"),
	}>
		{ category }
	</span>
}

templ EnabledBadge(enabled bool) {
	if enabled {
		<span class="tag is-success is-light">
			<span class="icon is-small">
				<svg style="width: 0.75rem; height: 0.75rem;" fill="currentColor" viewBox="0 0 20 20">
					<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
				</svg>
			</span>
			<span>Enabled</span>
		</span>
	} else {
		<span class="tag is-light">
			<span class="icon is-small">
				<svg style="width: 0.75rem; height: 0.75rem;" fill="currentColor" viewBox="0 0 20 20">
					<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
				</svg>
			</span>
			<span>Disabled</span>
		</span>
	}
}
