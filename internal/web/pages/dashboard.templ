package pages

import (
	"fmt"
	"github.com/aosanya/CodeValdCortex/internal/agent"
	"github.com/aosanya/CodeValdCortex/internal/web/components"
)

type DashboardStats struct {
	Total     int
	Running   int
	Stopped   int
	Paused    int
	Unhealthy int
	Healthy   int
}

templ Dashboard(agents []*agent.Agent, stats DashboardStats) {
	@components.Layout("Dashboard") {
		<div x-data="dashboard()" x-init="init()">
			<!-- Page Header -->
			<div class="mb-6">
				<h1 class="text-3xl font-bold text-gray-900 dark:text-white mb-2">
					Agent Dashboard
				</h1>
				<p class="text-gray-600 dark:text-gray-400">
					Monitor and manage your AI agents
				</p>
			</div>
			
			<!-- Stats Grid -->
			<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6">
				@components.StatsCard("Total Agents", fmt.Sprintf("%d", stats.Total), "users", "blue")
				@components.StatsCard("Running", fmt.Sprintf("%d", stats.Running), "play-circle", "green")
				@components.StatsCard("Stopped", fmt.Sprintf("%d", stats.Stopped), "stop-circle", "yellow")
				@components.StatsCard("Unhealthy", fmt.Sprintf("%d", stats.Unhealthy), "alert-circle", "red")
			</div>
			
			<!-- Filters -->
			<div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4 mb-6">
				<div class="flex flex-col md:flex-row gap-4">
					<div class="flex-1">
						<input 
							type="text" 
							x-model="search"
							placeholder="Search agents..."
							class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent dark:bg-gray-700 dark:text-white"
						/>
					</div>
					<div>
						<select 
							x-model="filter"
							class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent dark:bg-gray-700 dark:text-white"
						>
							<option value="all">All States</option>
							<option value="running">Running</option>
							<option value="stopped">Stopped</option>
							<option value="paused">Paused</option>
							<option value="error">Error</option>
						</select>
					</div>
					<div>
						<select 
							x-model="healthFilter"
							class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent dark:bg-gray-700 dark:text-white"
						>
							<option value="all">All Health</option>
							<option value="healthy">Healthy</option>
							<option value="unhealthy">Unhealthy</option>
						</select>
					</div>
				</div>
			</div>
			
			<!-- Agent Grid with Auto-Update -->
			<div 
				id="agents-grid" 
				class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"
				hx-get="/api/web/agents/live"
				hx-trigger="every 5s"
				hx-swap="innerHTML"
			>
				if len(agents) > 0 {
					for _, a := range agents {
						@components.AgentCard(a)
					}
				} else {
					<div class="col-span-full text-center py-12">
						<svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4"></path>
						</svg>
						<h3 class="mt-2 text-sm font-medium text-gray-900 dark:text-white">No agents</h3>
						<p class="mt-1 text-sm text-gray-500 dark:text-gray-400">Get started by creating a new agent.</p>
						<div class="mt-6">
							<button 
								@click="$dispatch('open-create-modal')"
								class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-primary hover:bg-blue-600"
							>
								+ Create Agent
							</button>
						</div>
					</div>
				}
			</div>
			
			<!-- Loading Indicator -->
			<div class="htmx-indicator fixed bottom-4 right-4 bg-primary text-white px-4 py-2 rounded-lg shadow-lg">
				<div class="flex items-center space-x-2">
					<svg class="animate-spin h-5 w-5" fill="none" viewBox="0 0 24 24">
						<circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
						<path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
					</svg>
					<span>Updating...</span>
				</div>
			</div>
		</div>
	}
}
