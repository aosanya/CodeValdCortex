package pages

import (
	"fmt"
	"github.com/aosanya/CodeValdCortex/internal/agency"
)

templ AgencySwitcherModal(agencies []*agency.Agency, currentAgency *agency.Agency) {
	<div class="modal" id="agency-switcher-modal">
		<div class="modal-background"></div>
		<div class="modal-card">
			<header class="modal-card-head">
				<p class="modal-card-title">
					<span class="icon-text">
						<span class="icon">
							<svg style="width: 1.5rem; height: 1.5rem;" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4"></path>
							</svg>
						</span>
						<span>Switch Agency</span>
					</span>
				</p>
				<button class="delete" aria-label="close" data-dismiss="modal"></button>
			</header>
			<section class="modal-card-body">
				if currentAgency != nil {
					<div class="notification is-info is-light mb-5">
						<p class="has-text-weight-semibold">Current Agency:</p>
						<p class="is-flex is-align-items-center mt-2">
							<span class="icon is-large mr-2" style="font-size: 2rem;">
								{ currentAgency.Icon }
							</span>
							<span>
								<strong>{ currentAgency.Name }</strong>
								<br/>
								<small class="has-text-grey">{ currentAgency.Category }</small>
							</span>
						</p>
					</div>
				}
				
				<!-- Search within modal -->
				<div class="field mb-4">
					<div class="control has-icons-left">
						<input 
							class="input" 
							type="text" 
							placeholder="Search agencies..." 
							id="modal-agency-search"
						/>
						<span class="icon is-left">
							<svg style="width: 1rem; height: 1rem;" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
							</svg>
						</span>
					</div>
				</div>
				
				<!-- Agency Switcher Grid -->
				<div class="agency-switcher-grid">
					if len(agencies) == 0 {
						<div class="notification is-warning">
							<p class="has-text-centered">No other agencies available</p>
						</div>
					} else {
						for _, ag := range agencies {
							@AgencySwitcherCard(*ag, currentAgency)
						}
					}
				</div>
			</section>
			<footer class="modal-card-foot">
				<button class="button" data-dismiss="modal">Cancel</button>
			</footer>
		</div>
	</div>
}

templ AgencySwitcherCard(ag agency.Agency, currentAgency *agency.Agency) {
	<div 
		class={ "box agency-switcher-card", templ.KV("is-active", currentAgency != nil && ag.ID == currentAgency.ID) }
		data-agency-id={ ag.ID }
		data-agency-name={ ag.Name }
		style="cursor: pointer;"
		onclick={ templ.ComponentScript{Call: fmt.Sprintf("selectAgencyFromModal('%s')", ag.ID)} }
	>
		<div class="media">
			<div class="media-left">
				<span class="icon is-large" style="font-size: 2.5rem;">
					{ ag.Icon }
				</span>
			</div>
			<div class="media-content">
				<p class="title is-5">{ ag.Name }</p>
				<p class="subtitle is-6">
					@CategoryBadgeSmall(ag.Category)
					@StatusBadgeSmall(ag.Status)
				</p>
				if ag.Metadata.TotalAgents > 0 {
					<p class="is-size-7 has-text-grey">
						{ fmt.Sprintf("%d agents", ag.Metadata.TotalAgents) }
					</p>
				}
			</div>
			if currentAgency != nil && ag.ID == currentAgency.ID {
				<div class="media-right">
					<span class="tag is-success">
						<span class="icon">
							<svg style="width: 1rem; height: 1rem;" fill="currentColor" viewBox="0 0 20 20">
								<path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
							</svg>
						</span>
						<span>Active</span>
					</span>
				</div>
			}
		</div>
	</div>
}

templ CategoryBadgeSmall(category string) {
	switch category {
		case "infrastructure":
			<span class="tag is-primary is-light is-small">Infrastructure</span>
		case "agriculture":
			<span class="tag is-success is-light is-small">Agriculture</span>
		case "logistics":
			<span class="tag is-warning is-light is-small">Logistics</span>
		case "transportation":
			<span class="tag is-info is-light is-small">Transportation</span>
		case "warehousing":
			<span class="tag is-link is-light is-small">Warehousing</span>
		case "finance":
			<span class="tag is-danger is-light is-small">Finance</span>
		case "charity":
			<span class="tag is-success is-light is-small">Charity</span>
		case "events":
			<span class="tag is-warning is-light is-small">Events</span>
		case "communication":
			<span class="tag is-info is-light is-small">Communication</span>
		default:
			<span class="tag is-light is-small">{ category }</span>
	}
}

templ StatusBadgeSmall(status agency.AgencyStatus) {
	switch status {
		case agency.AgencyStatusActive:
			<span class="tag is-success is-light is-small">Active</span>
		case agency.AgencyStatusInactive:
			<span class="tag is-light is-small">Inactive</span>
		case agency.AgencyStatusPaused:
			<span class="tag is-warning is-light is-small">Paused</span>
		case agency.AgencyStatusArchived:
			<span class="tag is-dark is-light is-small">Archived</span>
		default:
			<span class="tag is-light is-small">{ string(status) }</span>
	}
}
