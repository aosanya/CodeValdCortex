package agency_designer

import (
	"github.com/aosanya/CodeValdCortex/internal/ai"
	"github.com/aosanya/CodeValdCortex/internal/agency"
)

// IntroductionCard renders the introduction card component
templ IntroductionCard(currentAgency *agency.Agency, conversation *ai.ConversationContext, overview *agency.Overview) {
	<div class="box">
		<div id="introduction-content">
			<div class="content">
				<div class="field">
					<div class="control">
						if overview != nil && overview.Introduction != "" {
							<textarea
								class="textarea context-selectable"
								id="introduction-editor"
								placeholder="Enter introduction text for this agency..."
								rows="20"
								style="font-family: monospace; font-size: 14px;"
								data-intro-text={ overview.Introduction }
								title="Highlight text to add as context">
								{ overview.Introduction }
							</textarea>
						} else {
							<textarea
								class="textarea context-selectable"
								id="introduction-editor"
								placeholder="Enter introduction text for this agency..."
								rows="20"
								style="font-family: monospace; font-size: 14px;"
								data-intro-text=""
								title="Highlight text to add as context">
							</textarea>
						}
					</div>
				</div>
				<p class="help">Use this section to provide an overview and introduction to your agency. Highlight text to add it as context.</p>
			</div>
			<div class="buttons is-right">
				<button
					class="button is-small is-primary"
					onclick="saveOverviewIntroduction()"
					id="save-introduction-btn">
					<span class="icon"><i class="fas fa-save"></i></span>
					<span>Save</span>
				</button>
				<!-- AI Refine / Sparkle button (triggers AI refine flow) -->
				<button
					class="button is-small is-info"
					hx-post={ "/api/v1/agencies/" + currentAgency.ID + "/overview/refine" }
					hx-include="#introduction-editor"
				hx-target="#introduction-content"
				hx-indicator="#ai-process-status"
				hx-on::after-request="
					if (window.hideAIProcessStatus) {
						window.hideAIProcessStatus();
					} else {
						const status = document.getElementById('ai-process-status');
						if (status) {
							status.style.display = 'none';
						}
					}
				"
				id="ai-sparkle-btn"
				onclick="window.handleRefineClick && window.handleRefineClick()"
					title="Refine with AI">
					<span class="icon"><i class="fas fa-magic"></i></span>
					<span>Refine</span>
				</button>
				<button
					class="button is-small"
					onclick="undoOverviewIntroduction()"
					id="undo-introduction-btn">
					<span class="icon"><i class="fas fa-undo"></i></span>
					<span>Undo</span>
				</button>
			</div>
			
			<!-- Loading indicator for AI refine -->
			<div id="ai-refine-loading" class="htmx-indicator">
				<div class="notification is-info is-light">
					<div class="is-flex is-align-items-center">
						<span class="icon has-text-info mr-2">
							<i class="fas fa-spinner fa-spin"></i>
						</span>
						<span>AI is refining your introduction...</span>
					</div>
				</div>
			</div>
		</div>
	</div>
}