package agency_designer

// ListCardConfig holds the configuration for a list card
type ListCardConfig struct {
	ID              string // Card ID
	Title           string // Card title (optional, can be empty)
	Icon            string // Icon class for title
	AddButtonID     string // Add button ID
	AddFunction     string // JavaScript function to call on add
	AddButtonText   string // Add button text
	ListID          string // List container ID
	ListClass       string // List container class
	TableBodyID     string // Table body ID
	CodeColHeader   string // Code column header
	TitleColHeader  string // Title column header
	LoadingText     string // Loading text
}

// ListCard renders a reusable list card component
templ ListCard(config ListCardConfig) {
	<!-- List Card -->
	<div 
		class={ "card", templ.KV("m-0", config.Title == "") }
		id={ config.ID }>
		<header class="card-header">
			if config.Title != "" {
				<p class="card-header-title">
					if config.Icon != "" {
						<span class="icon"><i class={ config.Icon }></i></span>
					}
					<span>{ config.Title }</span>
				</p>
			}
			<button 
				class="card-header-icon button is-small is-success"
				onclick={ templ.ComponentScript{Call: config.AddFunction} }
				id={ config.AddButtonID }
				title={ "Add New " + config.AddButtonText }>
				<span class="icon"><i class="fas fa-plus"></i></span>
				<span>{ config.AddButtonText }</span>
			</button>
		</header>
		<div class="card-content" style="padding: 0;">
			<div id={ config.ListID } class={ config.ListClass }>
				<table class="table is-fullwidth is-striped is-hoverable">
					<thead>
						<tr>
							<th style="width: 15%;">{ config.CodeColHeader }</th>
							<th style="width: 65%;">{ config.TitleColHeader }</th>
							<th style="width: 20%;">Actions</th>
						</tr>
					</thead>
					<tbody id={ config.TableBodyID }>
						<!-- Items will be loaded here dynamically -->
						<tr>
							<td colspan="3" class="has-text-grey has-text-centered py-5">
								<p><i class="fas fa-spinner fa-spin"></i> { config.LoadingText }</p>
							</td>
						</tr>
					</tbody>
				</table>
			</div>
		</div>
	</div>
}